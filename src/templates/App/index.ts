import { className, ComponentTemplateParams, importComponentStyle } from '../Component';

export const createAppTemplate = ({
  useTypescript = false,
  styleExtension = null,
  useModules = false,
}: ComponentTemplateParams) => `import React${useTypescript ? `, { FC }` : ''} from 'react';
${useTypescript ? '' : `import PropTypes from 'prop-types';`}

${importComponentStyle('App', styleExtension, useModules)}
import logo from '../logo.svg';
${
  useTypescript
    ? `interface AppProps {

}`
    : ''
}

const App${useTypescript ? `: FC<AppProps>` : ''} = () => {
  return (
      <div ${className('App', useModules, styleExtension)}>
        <h1>Hello from App !</h1>
        <img src={logo} alt='react logo' />
        <div ${className('App_Content', useModules, styleExtension)}>
          <div>
            This was generated by{' '}
            <a
            href='https://npmjs/reactjs-cli' target='_blank' rel='noopener noreferrer'>
              rjs
            </a>{' '}
            thanks to{' '}
            <a
              href='https://github.com/facebook/create-react-app'
              target='_blank'
              rel='noopener noreferrer'>
              create-react-app
            </a>.
          </div>
          <div>
            Start modifying <code>src/App/App.${
              useTypescript ? 'tsx' : 'js'
            }</code> to start an amazing project ! üòÅ
          </div>
          <div>
            To learn more about react{' '}
            <a href='https://fr.reactjs.org/' target='_blank' rel='noopener noreferrer'>
              click here
            </a>.
          </div>
        </div>
      </div>
    );
  };

${useTypescript ? '' : `App.propTypes = {};`}

export default App;`;

export const createAppStyleTemplate = (styleExtension: 'scss' | 'css' = 'css') => {
  const scssTemplate = `@import '../assets/scss/variables';

.App {
  @include flex(center, center, column nowrap);
  min-height: 100vh;
  color: $text-color;
  line-height: 1.25;
  max-width: 1400px;
  margin: auto;
  overflow: hidden;
  padding: 1rem;

  h1 {
    font-size: 2.5rem;
  }

  img {
    max-width: 40rem;
    animation: spin 20s linear infinite;
    pointer-events: none;
  }

  &_Content {
    @include flex(center, center, column nowrap);
    z-index: 50;
    font-size: 1.25rem;

    div {
      text-align: center;
      margin: 1rem 0;
    }

    a {
      text-decoration: solid underline $text-color;
      transition: text-decoration 100ms ease-in, color 100ms ease-in;

      &:hover {
        color: darken($color: $react-color, $amount: 25%);
        text-decoration-color: $react-color;
      }
    }
  }
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}
`;
  const cssTemplate = `.App {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: column nowrap;
  min-height: 100vh;
  color: #c7c7c7;
  line-height: 1.25;
  max-width: 1400px;
  margin: auto;
  overflow: hidden;
  padding: 1rem;
}

.App h1 {
  font-size: 2.5rem;
}

.App img {
  max-width: 40rem;
  animation: spin 20s linear infinite;
  pointer-events: none;
}

.App_Content {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: column nowrap;
  z-index: 50;
  font-size: 1.25rem;
}

.App_Content div {
  text-align: center;
  margin: 1rem 0;
}

.App a {
  text-decoration: solid underline #c7c7c7;
  transition: text-decoration 100ms ease-in, color 100ms ease-in;
}

.App a:hover {
  color: #0cc6f8;
  text-decoration-color: #61dafb;
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}
`;

  return styleExtension === 'scss' ? scssTemplate : cssTemplate;
};

export const createAppTestTemplate = () => `import React from 'react';
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn more about react/i);
  expect(linkElement).toBeInTheDocument();
});
`;

export const createAppContainerTemplate = (useTypescript: boolean) => {
  const tsImports = useTypescript
    ? `import { Dispatch } from 'react';
import { State } from '../../store/reducers';

interface StateToProps {}

interface ownProps {}

interface DispatchToProps {}`
    : '';

  const mapDispatchToProps = useTypescript
    ? `const mapDispatchToProps = (
      dispatch: Dispatch<actionsTemplate.ActionTemplateActions>,
      ): DispatchToProps => ({});`
    : `const mapDispatchToProps = (dispatch) => ({});`;

  const mapStateToProps = useTypescript
    ? `const mapStateToProps = (state: State, ownProps: ownProps): StateToProps => ({});`
    : 'const mapStateToProps = (state, ownProps) => ({});';

  const typeDef = useTypescript
    ? 'export type AppPropsFromRedux = StateToProps & DispatchToProps & ownProps;'
    : '';

  return `import { connect } from 'react-redux';
import { actionsTemplate } from '../../store/actions';
import App from '../../App/App';
${tsImports}

${mapStateToProps}

${mapDispatchToProps}

${typeDef}

export default connect(mapStateToProps, mapDispatchToProps)(App);`;
};
